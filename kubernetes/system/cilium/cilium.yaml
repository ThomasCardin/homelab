---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUl0bUVKTmoyUW1tMDR2WVM2SCswNzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05URTBNREF5T0ZvWERUSTNNREl3TkRFMApNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1aXgzL2xGdm1TWTJsYThvN2hoT1VKa2EzajdoVkQxR2lHMFRLbXJabGpSRUh0TU0KaFR4M2dtd1ZYeE1aMnpsUWtzd0ZudFp1TXhHbjlWWWZ6dW9ZK3FRL0Jwc3IyUC9QWVViZlc1T25reGFhcDEwNAo4ZmFWdjNiMElSdHJIeTBWTDZMOXBTTmR5RFEyQm9Wb0h1SDdQSmFRUkV4N0hnbExtclNMNmdWbkVHRUpMRkVNCm5lR0NERHhzVXdsK3hzM2IyVjVOTjV4QytLSmJyemRlbkRReGlhemxIKzgzVUx2VVZXVWZJRHVEZmVqY0draHoKMjM2em1sdkc4ZFRoK0ltQlBEMTY3UHVtdTF5cU9lK0FSb25KZXlsYXVoaXpQSTFlQ1JOeFlzRjYyNTlUQWw2UAoyNDNMTFZMRzhCNllzRWQ3dm9adHluOUtJZG02L0pSeVdsczhhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRmRmeDVWSThxQ1ZtZXl4MW15RmQ0MUtJWmRoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk5rZlB3MlNNNDZIeXNWL1BoNmxjbWRKYnd1TVBOa25JdWhZckE4d08yb01VeUJZRzBrVloyCjUyT2dWWGNwY25uaXBoQkJkcmRxeCtmakk3d0QyWlpwbjIrWlpkS1lSdjMrdkx0R1l3L0JMREI1NWdUS0ZVLzYKalBwM2ZrSHhRNVVNMjlSSGljenNJRlpLcG55RkVJN2hvZXRVZ21qdlRYa2NOUmtnRTZmb2haT3FvSWZGNGRiQgpKcGhuSDNMU29CRUNhenlTN2tTWjJaeUxMSkJWRWpQeGRBYnNkTWR6N21FOG5mcnlSeW1CbUZ1TWJPVy8yNjdUCkgzSlQzRUdPc1hkNS9YNEhiL2hhSnN2NS95Ynh3T3dUWGdhbk9IUjJCOEE1b0h5ZHQ2cUN0d1A2cjAycmVZK3IKNkZkeTcvWDNJWm5VMldCbStScWtUSkhjN0NnZTIyUHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWl4My9sRnZtU1kybGE4bzdoaE9VSmthM2o3aFZEMUdpRzBUS21yWmxqUkVIdE1NCmhUeDNnbXdWWHhNWjJ6bFFrc3dGbnRadU14R245VllmenVvWStxUS9CcHNyMlAvUFlVYmZXNU9ua3hhYXAxMDQKOGZhVnYzYjBJUnRySHkwVkw2TDlwU05keURRMkJvVm9IdUg3UEphUVJFeDdIZ2xMbXJTTDZnVm5FR0VKTEZFTQpuZUdDRER4c1V3bCt4czNiMlY1Tk41eEMrS0picnpkZW5EUXhpYXpsSCs4M1VMdlVWV1VmSUR1RGZlamNHa2h6CjIzNnptbHZHOGRUaCtJbUJQRDE2N1B1bXUxeXFPZStBUm9uSmV5bGF1aGl6UEkxZUNSTnhZc0Y2MjU5VEFsNlAKMjQzTExWTEc4QjZZc0VkN3ZvWnR5bjlLSWRtNi9KUnlXbHM4YVFJREFRQUJBb0lCQUFFcUtnNERRR2w2M2JpTwpBZm1MV1dJVHN5RlV6MkFSaWhGc2JVUkVxdHZQcytWbGVKeVV4a0tnbm5tYnl2dWVIaXpzN2RRU2oxbnVjRmlPCmsyQmVBbzMrM1E0VGhuQ3pHUDhJekhqc01ZNHdCQU9zQjZFcjQ3L3c1SklZYzlFY0hSZlJNemtIUVp6eEJxMS8KeENqOVRPOFNHaER6VVluY2tRYUV2cU5XS1ZEbTU4VXluTS9obnpENmo2UWRDV2hualBtcTJwbnRVc05SOE5SZAp1Sk9RUUdNNkFNR25vU3EyaUV0anB5MGVQTU8xOXUwUmphaFIwNzl5STRhaHBTcmZJZXJTTmRMalFYcklWbVN6CjFVN3V5d2tYQS9YbVRZZWh4NncyVFRzbGJjbTlBdEtsSlRESmFvaVVrN2lnU0FCTTdWL0J6dUhpbEdrdVIwWDIKclZUd091a0NnWUVBeldBM3UwdjJNRXE5b1c5TTl6MVFld1NDYjhKamcxOFdhd0xuKzBHYUI5Qi9WSTV2cnpvKwo5MHZMRlozYVZkZHAvamFvWDZoOWRVOG9NYlllTVVER2Z5MTlkUjNmL3RidjZpaExsZlZvOGNTUTdaa0loRUZ4CkNuZWF6dFhYdFViMWw1OThQNEp1SDA2Tk84MlpIREh0Wmw3RXNpYitJeG5JN1I0WWdsdDYzUk1DZ1lFQTZCQ0sKODFwanlBUFYwZllMZ0dTdE9Cd2xZQmVjT0ZSc29JOCtrTUc3NlJ6V0tTSWRuUnBzQUExaGZTb1ZFM1ZXZ2hWRwo5azdNd0o3d3luTXRjelJ6MTZESEhObXNTUFlGbmJQWEc4b3lXR2tqb2tGZDl0T1VwTDV4Zlc2SHlKa293ZGhLCkVMUG41cENuWW13eXJOVXYxQUtiM3N2TkpLNzR5emh0WkY5T1hCTUNnWUF1SWJ2RERZZ0tSdStia0lXb1Q1U0IKWFh6ekg2WDh2MklvdldsZ2JkYnNoRy9salcwVzNpMkFuUHpNS1QzKzVEbEJ5Z00rSVhtMDNRZjVTcUF6amdwSQpUTzZPWFJ5UWdMVTVVcjNQdkdWTFVVMEFvY3hnOE5ZMGRMTklYSTVzZ0xqdnl2bzh4YzU0cDh0ZnNJb0E1RklnCkdZOXpPUUVDMzJyYm9GUC9EQTlvRXdLQmdIZTJrUGVZMllDRStmaW1CS2puUnJSN1VJeVJvWFV0bUJ2N3lUckQKdGp3N00vOWtLZ0t4YnFWWVFjSmZ3eCtXbUZuaXdBaXYvZEFnTGZkQ0UyQXEzdGVOaVNuSTRLZUN3c0xuMHoveQp2cVg5RnZUTTQ3eEF5WjF5NFBqajNBZ1Blb2NGSExBaEhyQkNUeGJtMmYxdXZJMlNDdmFVQysrd2s0ZkNSQ3hUClBna2hBb0dBQkZSOTM2c2VOWlY5VFhkS0wwNEw1QmNDRm4xQys1VStpeDZSdWpDK1ZzZnZ0OURQb3pySUdyMTIKNGdmMWFXMUc0ZXpLR0phZ25rTnRlYTdsSWRzRFBLSk9RdkpndndpVXduUDVsa0NjSU1tTDA4ZW1xYndrN3FFbApoa3RuM0NPWm16d3JJNEVvZlduQ0pBekNLQ0JUS1U5UnVLOVZRQy9FVmxWT01CWDJvK2M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUl0bUVKTmoyUW1tMDR2WVM2SCswNzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05URTBNREF5T0ZvWERUSTNNREl3TkRFMApNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1aXgzL2xGdm1TWTJsYThvN2hoT1VKa2EzajdoVkQxR2lHMFRLbXJabGpSRUh0TU0KaFR4M2dtd1ZYeE1aMnpsUWtzd0ZudFp1TXhHbjlWWWZ6dW9ZK3FRL0Jwc3IyUC9QWVViZlc1T25reGFhcDEwNAo4ZmFWdjNiMElSdHJIeTBWTDZMOXBTTmR5RFEyQm9Wb0h1SDdQSmFRUkV4N0hnbExtclNMNmdWbkVHRUpMRkVNCm5lR0NERHhzVXdsK3hzM2IyVjVOTjV4QytLSmJyemRlbkRReGlhemxIKzgzVUx2VVZXVWZJRHVEZmVqY0draHoKMjM2em1sdkc4ZFRoK0ltQlBEMTY3UHVtdTF5cU9lK0FSb25KZXlsYXVoaXpQSTFlQ1JOeFlzRjYyNTlUQWw2UAoyNDNMTFZMRzhCNllzRWQ3dm9adHluOUtJZG02L0pSeVdsczhhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRmRmeDVWSThxQ1ZtZXl4MW15RmQ0MUtJWmRoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk5rZlB3MlNNNDZIeXNWL1BoNmxjbWRKYnd1TVBOa25JdWhZckE4d08yb01VeUJZRzBrVloyCjUyT2dWWGNwY25uaXBoQkJkcmRxeCtmakk3d0QyWlpwbjIrWlpkS1lSdjMrdkx0R1l3L0JMREI1NWdUS0ZVLzYKalBwM2ZrSHhRNVVNMjlSSGljenNJRlpLcG55RkVJN2hvZXRVZ21qdlRYa2NOUmtnRTZmb2haT3FvSWZGNGRiQgpKcGhuSDNMU29CRUNhenlTN2tTWjJaeUxMSkJWRWpQeGRBYnNkTWR6N21FOG5mcnlSeW1CbUZ1TWJPVy8yNjdUCkgzSlQzRUdPc1hkNS9YNEhiL2hhSnN2NS95Ynh3T3dUWGdhbk9IUjJCOEE1b0h5ZHQ2cUN0d1A2cjAycmVZK3IKNkZkeTcvWDNJWm5VMldCbStScWtUSkhjN0NnZTIyUHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUkzMk9oUTNYTWlZMGRINTlSaHRQUnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05URTBNREF5T0ZvWERUSTNNREl3TkRFMApNREF5T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZydWZvaXViclFaUXQzTmdzUzZQSDJMbUl6R3YKeE5NWnE4QWEvYjNJTDRseVQ3UEtPZEJGd0FFenFKSFFoc053ZnVtKzFFUSttaEVxMFlLM3l1c08vdFF6MWhzVQplelMrazdBYjhraWx6MGQ3dHkySUdxSGFtVHFoWG1hVEJ5b29FUFU4THB2NFRBeUQxRXBxd2dqeVJHQkdnbi9xCkMvN25iZ3ZEQ2lMZ21PSFNyUVovZ012dUVmaWVtbGNMMWhoQkJyOFFidVBDOS9qZFRxRFhCbEFQUFZGblZ3N0kKQkhLazFVUXBwbU5wZEFYWFhOSWRxYlpvS2VLbkpjdndYVWNiS0phRk56VlVZWTBDM1BsV3ZJdDZ2QWlJeWFndwp4UUxjYnZORHg1VGNZYm0rVzhobW56Z1hObGZBNzlrVWhyeDBweDNFWjgvYXZhL2FWMzNxWTRDemxRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlhYOGVWU1BLZ2xabnNzZFpzaFhlTgpTaUdYWVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSFVnVHpRK0Rhd0RJNTdSZ2Q3NGdyUmNDeHAzYStibGxnUitzc0FvKzF1bG5YT3AKN21TdW9TVkxBaFE5TlBXN0dONjZaYkZmdGFNbUtISjhJSTA4YlQwQ2U1a0w1UkplYURmckN0blk3YVlQRnBtMwpEbUx3ZWpsc2VMWVZlRDlrVlBoNldUYVhyVDhWUlc2Y1h1U1gzNjV1cGZUVm00YUZnamFWMTZFaVpkUU9QbWtGClRVcmpKb2VoVU1id1BmWi9yOU9Yd3BLOHp0clVBTHZFQW9jYnZpKzJwUmNKem1tQWk0SGc3RkVETGNqTjE5dTEKMlZubXkyYTlJQmYrdkh1VElGaGV0eERLMEFjZ253NHVZT0IzVXR3ZndCVFA3Y2JnblRud0F3OFlCZ2pFVUo2SQpvZy9pUCtOYk0zUTF1ZmdEbXdjbXJxR3lJTm9uRFUxcVhMMnM4c2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnJ1Zm9pdWJyUVpRdDNOZ3NTNlBIMkxtSXpHdnhOTVpxOEFhL2IzSUw0bHlUN1BLCk9kQkZ3QUV6cUpIUWhzTndmdW0rMUVRK21oRXEwWUszeXVzTy90UXoxaHNVZXpTK2s3QWI4a2lsejBkN3R5MkkKR3FIYW1UcWhYbWFUQnlvb0VQVThMcHY0VEF5RDFFcHF3Z2p5UkdCR2duL3FDLzduYmd2RENpTGdtT0hTclFaLwpnTXZ1RWZpZW1sY0wxaGhCQnI4UWJ1UEM5L2pkVHFEWEJsQVBQVkZuVnc3SUJIS2sxVVFwcG1OcGRBWFhYTklkCnFiWm9LZUtuSmN2d1hVY2JLSmFGTnpWVVlZMEMzUGxXdkl0NnZBaUl5YWd3eFFMY2J2TkR4NVRjWWJtK1c4aG0KbnpnWE5sZkE3OWtVaHJ4MHB4M0VaOC9hdmEvYVYzM3FZNEN6bFFJREFRQUJBb0lCQUN3b21kSmZVODBNR0JrNgo2bURLdW9BVUVlbGpDb2NEazV1ODZ4YjdJZkxYYjVyUTN1VmJhaFBCNWg3N04zaHl3ZklPTlNrbm9ZTklZWDdDCmthTHA3NHMvRG5WajZNbDQxYlZnOXhEd1c4a1AwSlZZU25lQUpXaVlJQTFyVEpPWGVhd2ZCbkJhUlM3QlYvZVMKL0Z4K1pGMDZvMmtmZVQ5Q2QvVTYzemxEOEc2eUNMRG5KZVNxNlY0My81QW5XRHhYZjNCbHJBMFBMZlcyVTY4dQpLb05SdjI4cTNPbXkzbG1kRFhSUnRwTFE3ZVhac3hIODlkY2d2VllWQThIYXBHbzBIU1lsSnRIRUhxUVV6R29GCkMzdnZWbGpLZ2RlWEY3aExuUjl2OTNCcmM0TUxWVWd6b0FaUks0NG1OdnpRa2pkaVl4aHVoUVhhSGU1WTZ4ajMKSTAwT0RHRUNnWUVBL1UwdXptSU52WFVsYVV2QitXbXZVcjZUeUVCSVdmcUNGaFN1ZHZJeUJoOG16VTRFMmw1Qwo0TEdqNm80UUtPVUF4NVZaRDM0RG9DNUZtS0lPTG1INk5uU1NSU2NXajJTS1pEVVRGUVVOTk93bEcxTVE2cjR0CjQvRTJTc0UvV1lpZ2xxTWFLT2VQWnFEYlRZNWg5ZC91VC9DZFFIQ3cxei8zZk5ZSWszbWdWUzBDZ1lFQTdUdk0KcTU4VzcwbERUQStyVFZ1OTdDL2FJSEg3VEZFekR2U2p0T2tSYW90bVlUYVVNZlB3aWNqU1A1KzNsd3VuYXR0WAo2Mk9hbWlrSnQrUEVSYVpTcUpDcmdXTnRSUmt0aksyTytaVTNLN1dBRkVlVkc0NWZhcXZ2czYrQVJBYklTd3o4CkQxK05reGVqMWxkeUNDby8rNVZFU2xFTUgzTmNyc2RURXNNUHFRa0NnWUVBNnY0djdrZ0pkenEyK25qTi9CV1EKRWJPOFpvczhsRDFUY2lpOXNwdit6SzhaMEY0UklvVlFoaVJIYmROZUtwSkpwdDluUUhnbjVQTUluaEc2RmszUApVN1hSL1ZYR0dFR3VJa2thNnVWRTIxUTVHS0Iza1UvZVF4b0V4RldEOEF4UTcyOWhWWkY5K0RoRFBEQmJzVCtPClY1dGlSK1pFS1cydXJLSGtVdTBEVWdFQ2dZRUFrZjdYT2xjeHVoa1FQV0wzUFNoVWZXSUZqeW9XU1NVL2t0aWoKVnRhSVRWVjBzQ2J5bEx0WE1MUlNENjJ2UWxsOXNwbENSaTZLR28xZTJiaG1OYWJoLzdMb21Ud2pKdjhUdFJ1cQpmWmFDMlhkZFZ4Mm1lY3JvbGJFeVZ4YU9qVTdQUE1ERTdvRVRrNDVjMmEvL0VWOU8rUGtuaWNUTy9SdjEwZW9CCkNlN1pXR0VDZ1lCVU4wUTFoVzNXNkZnSzVmTEo2eUhzL0NiSzFHVk9JUGhGL00wVDBsTFRDeUxFeHBBYlltYXcKaEswR01STlBZWGtpQTBFNnAzbmZ6Umh1aHQvS2tNSFpDUFNRUEFWTU4ycjVoSGNJRk55alpaeVAyeHl2M1ZpTgo3Yk8rMGY2Z0lYcnF3N0RZbmJBaENjcjE3UEtmdWptUTc2cGpOZVowVGQvK0E4NG9BaUs5TXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUl0bUVKTmoyUW1tMDR2WVM2SCswNzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05URTBNREF5T0ZvWERUSTNNREl3TkRFMApNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1aXgzL2xGdm1TWTJsYThvN2hoT1VKa2EzajdoVkQxR2lHMFRLbXJabGpSRUh0TU0KaFR4M2dtd1ZYeE1aMnpsUWtzd0ZudFp1TXhHbjlWWWZ6dW9ZK3FRL0Jwc3IyUC9QWVViZlc1T25reGFhcDEwNAo4ZmFWdjNiMElSdHJIeTBWTDZMOXBTTmR5RFEyQm9Wb0h1SDdQSmFRUkV4N0hnbExtclNMNmdWbkVHRUpMRkVNCm5lR0NERHhzVXdsK3hzM2IyVjVOTjV4QytLSmJyemRlbkRReGlhemxIKzgzVUx2VVZXVWZJRHVEZmVqY0draHoKMjM2em1sdkc4ZFRoK0ltQlBEMTY3UHVtdTF5cU9lK0FSb25KZXlsYXVoaXpQSTFlQ1JOeFlzRjYyNTlUQWw2UAoyNDNMTFZMRzhCNllzRWQ3dm9adHluOUtJZG02L0pSeVdsczhhUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRmRmeDVWSThxQ1ZtZXl4MW15RmQ0MUtJWmRoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk5rZlB3MlNNNDZIeXNWL1BoNmxjbWRKYnd1TVBOa25JdWhZckE4d08yb01VeUJZRzBrVloyCjUyT2dWWGNwY25uaXBoQkJkcmRxeCtmakk3d0QyWlpwbjIrWlpkS1lSdjMrdkx0R1l3L0JMREI1NWdUS0ZVLzYKalBwM2ZrSHhRNVVNMjlSSGljenNJRlpLcG55RkVJN2hvZXRVZ21qdlRYa2NOUmtnRTZmb2haT3FvSWZGNGRiQgpKcGhuSDNMU29CRUNhenlTN2tTWjJaeUxMSkJWRWpQeGRBYnNkTWR6N21FOG5mcnlSeW1CbUZ1TWJPVy8yNjdUCkgzSlQzRUdPc1hkNS9YNEhiL2hhSnN2NS95Ynh3T3dUWGdhbk9IUjJCOEE1b0h5ZHQ2cUN0d1A2cjAycmVZK3IKNkZkeTcvWDNJWm5VMldCbStScWtUSkhjN0NnZTIyUHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUtJWjJnSEhONkFkMGVUYllUSmd2Z1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd05URTBNREF5T0ZvWERUSTNNREl3TkRFMApNREF5T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxSVVozUVZobUdZSTFBZzJQZXIKY3hnclc0Wk1jbTZNcHpISFdjdWsvL1IxUUNCTVdLRWpnUWRUQWZpcFU0dklMUDRPWTV0SFVreHJSR1hTbEJqQgp5RnpaSHowL3pwVGJKSlZvUnVBcDExakpxWjlpaUtyd0lFRGVFRUZDVklobkdLVW9TS3d3b2x4QVBybTI4ejBrCk1COE1VRGpIRjdjUkRNKzhkMlNpeVBKenhsVjQ4M2toNG44dFVLMmQ4TXhLR1pWOWR3bDdrcDNDYlZKdklaa2YKY2xXdEVPbkI4QWx0cDUwZkR2S2gvMERqN25ja21mMUtsOEhBYStYRk04NlVqdnBiWjBzTVdOM3E1Z05ORzFpdQpKeFpUSUtsbW5kQ2l3TVZQNEZ5dUpNOE5ldlhVcW9OcFJOczhxdmZEOGtlSHlVWTFKb2NqL0ZyNjNxdzRlUUdQClVhMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVYxL0hsVWp5b0pXWgo3TEhXYklWM2pVb2hsMkV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVFnRStuTk85OVJsUU1wUndvY2dDSjNUQXlaUHgKVlUxcGdYOTJlNzE3N0NJUWxLazRtMTZnN2plOW90MVZ0ZXJhM0ZjNGJBWlVBZnRFQTF2MnMrb0E2MVVyUWxLYQpPRnJ3M3pZWnVFbGFCcTRtQWpuWUVMcFVqOU1yaXFuMmdIZENEWjl0b0lUcW1mb0xncUFHbWluVEN1OEdKRnRhCmI5c1JmN1F1S1UwcmtHVzF6cXVSZUtrb29PZUFJMjNpdzh2b1Y1WENEV3ZTLzlTMmsrVkVqVGZoUkRNYTFxcnIKSHZhUm9hako4dU5ZcGRFcFE3aFF6RTNZWjBvbi81NXA4VDJGc2NKUERXV1QrTHBLaUo0V3lTT3ZLRERKSzlDTgpXNmh6QmZxbWttL28xYXM2UFFvRldEOGpzdlNWUDBmOCs3WHhkM0hzRmdlWDU2TldBa3IzK1JUMmtnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdEZSbmRCV0dZWmdqVUNEWTk2dHpHQ3RiaGt4eWJveW5NY2RaeTZULzlIVkFJRXhZCm9TT0JCMU1CK0tsVGk4Z3MvZzVqbTBkU1RHdEVaZEtVR01ISVhOa2ZQVC9PbE5za2xXaEc0Q25YV01tcG4yS0kKcXZBZ1FONFFRVUpVaUdjWXBTaElyRENpWEVBK3ViYnpQU1F3SHd4UU9NY1h0eEVNejd4M1pLTEk4blBHVlhqegplU0hpZnkxUXJaM3d6RW9abFgxM0NYdVNuY0p0VW04aG1SOXlWYTBRNmNId0NXMm5uUjhPOHFIL1FPUHVkeVNaCi9VcVh3Y0JyNWNVenpwU08rbHRuU3d4WTNlcm1BMDBiV0s0bkZsTWdxV2FkMEtMQXhVL2dYSzRrencxNjlkU3EKZzJsRTJ6eXE5OFB5UjRmSlJqVW1oeVA4V3ZyZXJEaDVBWTlSclFJREFRQUJBb0lCQUNXZlNtb3NwM21yRFFzRgpuMTZrdFlHQVlqcjFyaFlrWUNtQmh0bDIxalBCVnB5bWNRTkZiZ0VDTDNJYW1hU2JJYy9yWHBxaDJhaTU1RzQ5CjdjbndmQVhyQXBwN3VuVFI5Nkw0TzNrL0lYK1RxMERtaE03dEJEMmtWczNXc2Q0M2JDdmc2TENNQVFPd0g2WU4KWmxnR09jZndnTGdueVduWE04NFBhdlZqQlB1WUZFeWRjYzVlN3lnZHhjUlJKSXJDVVRqVUx5dyttKzJOaC9PbApjWlk1WGtyMTBkVXZMVWRKQVBNd1lzN1I0ajRkUTNnbGlLN0hOQkZaSjVQWkszQ2dGZEsrbXpudlRIdE9oNDJoCld5NzRtaWxvc2ZCdzlSUDFhdFIxOERESThjRjRVMUN0b0V1dFRTdFhZYmhtRjNnSTJreGNQcXBTMlRDZEdUd1gKNC9LNlBuMENnWUVBMW5WWXJYYmxtNk1IYVF3MDlCc3A4RVlYcTZFclpxQXQwZmxzeWpnWW5veXdYaklSLzB5YQo0TVFEY3dremJvaGZ3aTZxVmNGTzdzdkJ3WVc5OWFFcDRhdFUrRHhOQ1pQdUNFN1N2cUxjRFRvQis2akQ1aGpwCjhGeDd6aGRBL0VKUHpMZnBkbWFxOUpPTTM4MzRPVnBpMU1UREZYQU40QWFiWWY5OVlNQ20rNE1DZ1lFQTEwS3IKa0orYmZnUmQwRi8wd2RRYVZyK0tmZDRNTkRuRU5jV2RNZlU0Wld6bnRxWTM3NUZ2MGpXWDVIOUhNSXBrV2dRTApmRTNQTzY3WDFkbVZPNktKeEgyeGtCZjN5aEExVVk5anJGN2YvYk55Z0tGa3ZCVHFlTGFOVXRWWkNpeGFieEgrCjRjZ01SM2ZaeWNnb29PYi9Sek9IWkUyc1VPQmc0QmNtYzZxaUJ3OENnWUVBc2Q0RG5XTVdUajRwd0R0cWsrY1AKb29OUDBINU1zOEk0SG9XRGNEaVVXck9POTZFSmdqZXo0S1ZSd3hBbmd3NUNkWmdrbUJsSzhRMDNkdDBJenZkSworQ3NVdndtc1R6eE0yTUVmVXhOWjlQSmVnSzNaUkRiM2wrM3NsT0orZUhvN0d5eVJ5aXllcjFqTkp6WDZJUDlSCkp1ekdiRHBTbDdLREh3VTZwSXRFTXljQ2dZRUFxVEtkV2lNcWZHWUFPMzZCQ3kybHVsUDZEcTlQVm1tbGdVS2cKS1psL1I3SFBmREN3dk56TFVTYVJDcWpFa3pIa2FTRE95bGo2c0FYaFh4VVVpUGhjWTVjTXo1OFhSTHR5dlhZQQp1WWNsZHV2cTc1SnNkSzNZRXlRaWQxNTlDMU1Mamt4TjFMaUNkbGFOV0Y2OUdLUVpPYVVXSWRBdnhxNW5WeHk3Ck82VitrQjhDZ1lBV3VhVGthekhRR20xZ2lzRUo4cmVmN3JyNHNYNTcyWGlUbjNnV3Z1ZXAraWQ5OFRPS1VJSHYKa0YrLzZlSW1hUFdZZDhMYk9pRk00WENIdm5ySTNCWkdXRVE5RDdJSzRwL2JvUlp1Wmh1bFFmRERVUFRHSVZ0dgoxbWtFZThtMkh2VDljUjVOOXdNdGlpcWgweENadHVUNE82Z01qQWpRU1N1ZFJuTWhhZFdtRFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"
  enable-envoy-config: "true"
  enable-gateway-api: "true"
  enable-gateway-api-secrets-sync: "true"
  gateway-api-secrets-namespace: "cilium-secrets"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  # Enable L2 announcements
  enable-l2-announcements: "true"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - tlsroutes
  - httproutes
  - grpcroutes
  - referencegrants
  - referencepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - grpcroutes/status
  - tlsroutes/status
  verbs:
  - update
  - patch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.0@sha256:e26ecd316e742e4c8aa1e302ba8b577c2d37d114583d6c4cdd2b638493546a79"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.0@sha256:45b3ea70b73aee01644f800b8f6138c36446bfb130d2b88b0f75775ebe6a9ab6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            
            exec:
              command:
              - grpc_health_probe
              - -addr=localhost:4222
            timeoutSeconds: 3
          livenessProbe:
            
            exec:
              command:
              - grpc_health_probe
              - -addr=localhost:4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            
            exec:
              command:
              - grpc_health_probe
              - -addr=localhost:4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.3@sha256:e6b825302fc1e406b1305363fe0bcd1fdf95730b32c2b99a2b36dfa37bdaeec2"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.3@sha256:1cd84251cec46e20f9e839ee0afba9b51c8de59d35681234f701d7f42062f138"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
